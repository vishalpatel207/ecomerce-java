/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.44
 * Generated at: 2025-09-15 05:18:28 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import java.util.*;

public final class cart_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(6);
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\n');
      out.write('\n');

List<Map<String, String>> cart = (List<Map<String, String>>) session.getAttribute("cart");
if (cart == null) {
    cart = new ArrayList<>();
}

// Handle adding products to cart
if ("POST".equalsIgnoreCase(request.getMethod())) {
    String productId = request.getParameter("productId");
    String productName = request.getParameter("productName");
    String productPrice = request.getParameter("productPrice");
    String productImage = request.getParameter("productImage");
    
    if (productId != null && productName != null && productPrice != null && productImage != null) {
        // Check if product already exists in cart
        boolean found = false;
        for (Map<String, String> item : cart) {
            if (item.get("id").equals(productId)) {
                int quantity = Integer.parseInt(item.get("quantity"));
                item.put("quantity", String.valueOf(quantity + 1));
                found = true;
                break;
            }
        }
        
        if (!found) {
            Map<String, String> newItem = new HashMap<>();
            newItem.put("id", productId);
            newItem.put("name", productName);
            newItem.put("price", productPrice);
            newItem.put("image", productImage);
            newItem.put("quantity", "1");
            cart.add(newItem);
        }
        session.setAttribute("cart", cart);
    }
}

// Handle removing products from cart
String removeId = request.getParameter("removeId");
if (removeId != null) {
    cart.removeIf(item -> item.get("id").equals(removeId));
    session.setAttribute("cart", cart);
}

// Handle updating quantities
String updateId = request.getParameter("updateId");
String newQuantity = request.getParameter("newQuantity");
if (updateId != null && newQuantity != null) {
    try {
        int qty = Integer.parseInt(newQuantity);
        if (qty <= 0) {
            cart.removeIf(item -> item.get("id").equals(updateId));
        } else {
            for (Map<String, String> item : cart) {
                if (item.get("id").equals(updateId)) {
                    item.put("quantity", String.valueOf(qty));
                    break;
                }
            }
        }
        session.setAttribute("cart", cart);
    } catch (NumberFormatException e) {
        // Invalid quantity, ignore
    }
}

// Calculate total
double total = 0;
for (Map<String, String> item : cart) {
    String priceStr = item.get("price").replace("â‚¹", "").replace(",", "");
    double price = Double.parseDouble(priceStr);
    int quantity = Integer.parseInt(item.get("quantity"));
    total += price * quantity;
}

      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("    <title>Your Cart | ShopEasy</title>\n");
      out.write("    <meta charset=\"UTF-8\">\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n");
      out.write("    <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css\" rel=\"stylesheet\">\n");
      out.write("    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css\">\n");
      out.write("    <style>\n");
      out.write("        body {\n");
      out.write("            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n");
      out.write("            background-color: #f8f9fa;\n");
      out.write("        }\n");
      out.write("        .navbar {\n");
      out.write("            background: rgba(255, 255, 255, 0.95);\n");
      out.write("            backdrop-filter: blur(10px);\n");
      out.write("            box-shadow: 0 2px 20px rgba(0, 0, 0, 0.1);\n");
      out.write("        }\n");
      out.write("        .nav-brand {\n");
      out.write("            font-size: 1.8rem;\n");
      out.write("            font-weight: 700;\n");
      out.write("            color: #667eea;\n");
      out.write("            text-decoration: none;\n");
      out.write("        }\n");
      out.write("        .nav-brand i {\n");
      out.write("            font-size: 2rem;\n");
      out.write("        }\n");
      out.write("        .cart-item {\n");
      out.write("            background: white;\n");
      out.write("            border-radius: 15px;\n");
      out.write("            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);\n");
      out.write("            transition: all 0.3s ease;\n");
      out.write("        }\n");
      out.write("        .cart-item:hover {\n");
      out.write("            box-shadow: 0 10px 25px rgba(0, 0, 0, 0.15);\n");
      out.write("        }\n");
      out.write("        .product-image {\n");
      out.write("            width: 100px;\n");
      out.write("            height: 100px;\n");
      out.write("            object-fit: cover;\n");
      out.write("            border-radius: 10px;\n");
      out.write("        }\n");
      out.write("        .quantity-controls {\n");
      out.write("            display: flex;\n");
      out.write("            align-items: center;\n");
      out.write("            gap: 10px;\n");
      out.write("        }\n");
      out.write("        .quantity-btn {\n");
      out.write("            width: 35px;\n");
      out.write("            height: 35px;\n");
      out.write("            border: 1px solid #dee2e6;\n");
      out.write("            background: white;\n");
      out.write("            border-radius: 50%;\n");
      out.write("            display: flex;\n");
      out.write("            align-items: center;\n");
      out.write("            justify-content: center;\n");
      out.write("            cursor: pointer;\n");
      out.write("            transition: all 0.3s ease;\n");
      out.write("        }\n");
      out.write("        .quantity-btn:hover {\n");
      out.write("            background: #667eea;\n");
      out.write("            color: white;\n");
      out.write("            border-color: #667eea;\n");
      out.write("        }\n");
      out.write("        .quantity-input {\n");
      out.write("            width: 60px;\n");
      out.write("            text-align: center;\n");
      out.write("            border: 1px solid #dee2e6;\n");
      out.write("            border-radius: 5px;\n");
      out.write("            padding: 5px;\n");
      out.write("        }\n");
      out.write("        .section-title {\n");
      out.write("            text-align: center;\n");
      out.write("            font-size: 2.5rem;\n");
      out.write("            font-weight: 700;\n");
      out.write("            color: #2d3748;\n");
      out.write("            margin-bottom: 50px;\n");
      out.write("            position: relative;\n");
      out.write("        }\n");
      out.write("        .section-title::after {\n");
      out.write("            content: '';\n");
      out.write("            position: absolute;\n");
      out.write("            bottom: -10px;\n");
      out.write("            left: 50%;\n");
      out.write("            transform: translateX(-50%);\n");
      out.write("            width: 80px;\n");
      out.write("            height: 4px;\n");
      out.write("            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n");
      out.write("            border-radius: 2px;\n");
      out.write("        }\n");
      out.write("        .btn-primary {\n");
      out.write("            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n");
      out.write("            border: none;\n");
      out.write("            border-radius: 25px;\n");
      out.write("            padding: 12px 30px;\n");
      out.write("            font-weight: 600;\n");
      out.write("            transition: all 0.3s ease;\n");
      out.write("        }\n");
      out.write("        .btn-primary:hover {\n");
      out.write("            transform: translateY(-2px);\n");
      out.write("            box-shadow: 0 10px 25px rgba(102, 126, 234, 0.3);\n");
      out.write("        }\n");
      out.write("        .btn-danger {\n");
      out.write("            border-radius: 25px;\n");
      out.write("            padding: 8px 20px;\n");
      out.write("            font-weight: 600;\n");
      out.write("        }\n");
      out.write("        .btn-secondary {\n");
      out.write("            border-radius: 25px;\n");
      out.write("            padding: 10px 25px;\n");
      out.write("            font-weight: 600;\n");
      out.write("        }\n");
      out.write("        .total-section {\n");
      out.write("            background: white;\n");
      out.write("            border-radius: 15px;\n");
      out.write("            padding: 30px;\n");
      out.write("            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);\n");
      out.write("        }\n");
      out.write("        .empty-cart {\n");
      out.write("            text-align: center;\n");
      out.write("            padding: 60px 20px;\n");
      out.write("        }\n");
      out.write("        .empty-cart i {\n");
      out.write("            font-size: 4rem;\n");
      out.write("            color: #dee2e6;\n");
      out.write("            margin-bottom: 20px;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        /* Responsive Design */\n");
      out.write("        @media (max-width: 1200px) {\n");
      out.write("            .container {\n");
      out.write("                max-width: 100%;\n");
      out.write("                padding: 0 15px;\n");
      out.write("            }\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        @media (max-width: 992px) {\n");
      out.write("            .section-title {\n");
      out.write("                font-size: 2.2rem;\n");
      out.write("            }\n");
      out.write("            \n");
      out.write("            .cart-item .row {\n");
      out.write("                flex-direction: column;\n");
      out.write("                text-align: center;\n");
      out.write("            }\n");
      out.write("            \n");
      out.write("            .cart-item .col-md-2,\n");
      out.write("            .cart-item .col-md-4,\n");
      out.write("            .cart-item .col-md-3,\n");
      out.write("            .cart-item .col-md-1 {\n");
      out.write("                width: 100%;\n");
      out.write("                margin-bottom: 15px;\n");
      out.write("            }\n");
      out.write("            \n");
      out.write("            .product-image {\n");
      out.write("                width: 150px;\n");
      out.write("                height: 150px;\n");
      out.write("                margin: 0 auto;\n");
      out.write("            }\n");
      out.write("            \n");
      out.write("            .quantity-controls {\n");
      out.write("                justify-content: center;\n");
      out.write("            }\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        @media (max-width: 768px) {\n");
      out.write("            .section-title {\n");
      out.write("                font-size: 1.8rem;\n");
      out.write("                margin-bottom: 40px;\n");
      out.write("            }\n");
      out.write("            \n");
      out.write("            .cart-item {\n");
      out.write("                padding: 20px 15px;\n");
      out.write("            }\n");
      out.write("            \n");
      out.write("            .product-image {\n");
      out.write("                width: 120px;\n");
      out.write("                height: 120px;\n");
      out.write("            }\n");
      out.write("            \n");
      out.write("            .total-section {\n");
      out.write("                padding: 20px;\n");
      out.write("                margin-top: 20px;\n");
      out.write("            }\n");
      out.write("            \n");
      out.write("            .nav-brand {\n");
      out.write("                font-size: 1.5rem;\n");
      out.write("            }\n");
      out.write("            \n");
      out.write("            .nav-brand i {\n");
      out.write("                font-size: 1.5rem;\n");
      out.write("            }\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        @media (max-width: 576px) {\n");
      out.write("            .container {\n");
      out.write("                padding: 0 10px;\n");
      out.write("            }\n");
      out.write("            \n");
      out.write("            .section-title {\n");
      out.write("                font-size: 1.6rem;\n");
      out.write("                margin-bottom: 30px;\n");
      out.write("            }\n");
      out.write("            \n");
      out.write("            .cart-item {\n");
      out.write("                padding: 15px 10px;\n");
      out.write("            }\n");
      out.write("            \n");
      out.write("            .product-image {\n");
      out.write("                width: 100px;\n");
      out.write("                height: 100px;\n");
      out.write("            }\n");
      out.write("            \n");
      out.write("            .cart-item h5 {\n");
      out.write("                font-size: 1.1rem;\n");
      out.write("            }\n");
      out.write("            \n");
      out.write("            .cart-item h6 {\n");
      out.write("                font-size: 1rem;\n");
      out.write("            }\n");
      out.write("            \n");
      out.write("            .quantity-btn {\n");
      out.write("                width: 30px;\n");
      out.write("                height: 30px;\n");
      out.write("                font-size: 12px;\n");
      out.write("            }\n");
      out.write("            \n");
      out.write("            .quantity-input {\n");
      out.write("                width: 50px;\n");
      out.write("                font-size: 14px;\n");
      out.write("            }\n");
      out.write("            \n");
      out.write("            .btn {\n");
      out.write("                padding: 8px 16px;\n");
      out.write("                font-size: 13px;\n");
      out.write("            }\n");
      out.write("            \n");
      out.write("            .total-section {\n");
      out.write("                padding: 15px;\n");
      out.write("            }\n");
      out.write("            \n");
      out.write("            .empty-cart i {\n");
      out.write("                font-size: 3rem;\n");
      out.write("            }\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        @media (max-width: 480px) {\n");
      out.write("            .section-title {\n");
      out.write("                font-size: 1.4rem;\n");
      out.write("            }\n");
      out.write("            \n");
      out.write("            .cart-item {\n");
      out.write("                padding: 12px 8px;\n");
      out.write("            }\n");
      out.write("            \n");
      out.write("            .product-image {\n");
      out.write("                width: 80px;\n");
      out.write("                height: 80px;\n");
      out.write("            }\n");
      out.write("            \n");
      out.write("            .cart-item h5 {\n");
      out.write("                font-size: 1rem;\n");
      out.write("            }\n");
      out.write("            \n");
      out.write("            .cart-item h6 {\n");
      out.write("                font-size: 0.9rem;\n");
      out.write("            }\n");
      out.write("            \n");
      out.write("            .quantity-btn {\n");
      out.write("                width: 25px;\n");
      out.write("                height: 25px;\n");
      out.write("                font-size: 10px;\n");
      out.write("            }\n");
      out.write("            \n");
      out.write("            .quantity-input {\n");
      out.write("                width: 40px;\n");
      out.write("                font-size: 12px;\n");
      out.write("            }\n");
      out.write("            \n");
      out.write("            .btn {\n");
      out.write("                padding: 6px 12px;\n");
      out.write("                font-size: 12px;\n");
      out.write("            }\n");
      out.write("            \n");
      out.write("            .empty-cart i {\n");
      out.write("                font-size: 2.5rem;\n");
      out.write("            }\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        @media (max-width: 360px) {\n");
      out.write("            .container {\n");
      out.write("                padding: 0 5px;\n");
      out.write("            }\n");
      out.write("            \n");
      out.write("            .cart-item {\n");
      out.write("                padding: 10px 5px;\n");
      out.write("            }\n");
      out.write("            \n");
      out.write("            .product-image {\n");
      out.write("                width: 70px;\n");
      out.write("                height: 70px;\n");
      out.write("            }\n");
      out.write("            \n");
      out.write("            .btn {\n");
      out.write("                padding: 5px 10px;\n");
      out.write("                font-size: 11px;\n");
      out.write("            }\n");
      out.write("        }\n");
      out.write("    </style>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("    <nav class=\"navbar navbar-expand-lg navbar-light\">\n");
      out.write("        <div class=\"container\">\n");
      out.write("            <a class=\"navbar-brand\" href=\"index.jsp\">\n");
      out.write("                <i class=\"fas fa-shopping-bag\"></i>\n");
      out.write("                <span>ShopEasy</span>\n");
      out.write("            </a>\n");
      out.write("            <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n");
      out.write("                <ul class=\"navbar-nav ms-auto\">\n");
      out.write("                    <li class=\"nav-item\">\n");
      out.write("                        <a class=\"nav-link\" href=\"index.jsp\">Home</a>\n");
      out.write("                    </li>\n");
      out.write("                    <li class=\"nav-item\">\n");
      out.write("                        <a class=\"nav-link\" href=\"category.jsp\">Categories</a>\n");
      out.write("                    </li>\n");
      out.write("                    <li class=\"nav-item\">\n");
      out.write("                        <a class=\"nav-link\" href=\"product.jsp?category=Electronics\">Products</a>\n");
      out.write("                    </li>\n");
      out.write("                    <li class=\"nav-item\">\n");
      out.write("                        <a class=\"nav-link active\" href=\"cart.jsp\">Cart</a>\n");
      out.write("                    </li>\n");
      out.write("                </ul>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("    </nav>\n");
      out.write("    \n");
      out.write("    <div class=\"container mt-5\">\n");
      out.write("        <h1 class=\"section-title\">Your Shopping Cart</h1>\n");
      out.write("        \n");
      out.write("        ");
 if(cart.isEmpty()) { 
      out.write("\n");
      out.write("            <div class=\"empty-cart\">\n");
      out.write("                <i class=\"fas fa-shopping-cart\"></i>\n");
      out.write("                <h3>Your cart is empty</h3>\n");
      out.write("                <p class=\"text-muted\">Add some products to get started!</p>\n");
      out.write("                <a href=\"category.jsp\" class=\"btn btn-primary mt-3\">\n");
      out.write("                    <i class=\"fas fa-shopping-bag me-2\"></i>Start Shopping\n");
      out.write("                </a>\n");
      out.write("            </div>\n");
      out.write("        ");
 } else { 
      out.write("\n");
      out.write("            <div class=\"row\">\n");
      out.write("                <div class=\"col-lg-8\">\n");
      out.write("                    ");
 for(Map<String, String> item : cart) { 
      out.write("\n");
      out.write("                    <div class=\"cart-item mb-4 p-4\">\n");
      out.write("                        <div class=\"row align-items-center\">\n");
      out.write("                            <div class=\"col-md-2\">\n");
      out.write("                                <img src=\"");
      out.print(item.get("image"));
      out.write("\" alt=\"");
      out.print(item.get("name"));
      out.write("\" class=\"product-image\">\n");
      out.write("                            </div>\n");
      out.write("                            <div class=\"col-md-4\">\n");
      out.write("                                <h5 class=\"mb-1\">");
      out.print(item.get("name"));
      out.write("</h5>\n");
      out.write("                                <p class=\"text-muted mb-0\">Product ID: ");
      out.print(item.get("id"));
      out.write("</p>\n");
      out.write("                            </div>\n");
      out.write("                            <div class=\"col-md-2\">\n");
      out.write("                                <h6 class=\"text-primary mb-0\">");
      out.print(item.get("price"));
      out.write("</h6>\n");
      out.write("                            </div>\n");
      out.write("                            <div class=\"col-md-3\">\n");
      out.write("                                <div class=\"quantity-controls\">\n");
      out.write("                                    <form action=\"cart.jsp\" method=\"post\" class=\"d-inline\">\n");
      out.write("                                        <input type=\"hidden\" name=\"updateId\" value=\"");
      out.print(item.get("id"));
      out.write("\">\n");
      out.write("                                        <input type=\"hidden\" name=\"newQuantity\" value=\"");
      out.print(Integer.parseInt(item.get("quantity")) - 1);
      out.write("\">\n");
      out.write("                                        <button type=\"submit\" class=\"quantity-btn\" ");
      out.print(Integer.parseInt(item.get("quantity")) <= 1 ? "disabled" : "");
      out.write(">\n");
      out.write("                                            <i class=\"fas fa-minus\"></i>\n");
      out.write("                                        </button>\n");
      out.write("                                    </form>\n");
      out.write("                                    <input type=\"number\" value=\"");
      out.print(item.get("quantity"));
      out.write("\" class=\"quantity-input\" \n");
      out.write("                                           onchange=\"updateQuantity('");
      out.print(item.get("id"));
      out.write("', this.value)\" min=\"1\">\n");
      out.write("                                    <form action=\"cart.jsp\" method=\"post\" class=\"d-inline\">\n");
      out.write("                                        <input type=\"hidden\" name=\"updateId\" value=\"");
      out.print(item.get("id"));
      out.write("\">\n");
      out.write("                                        <input type=\"hidden\" name=\"newQuantity\" value=\"");
      out.print(Integer.parseInt(item.get("quantity")) + 1);
      out.write("\">\n");
      out.write("                                        <button type=\"submit\" class=\"quantity-btn\">\n");
      out.write("                                            <i class=\"fas fa-plus\"></i>\n");
      out.write("                                        </button>\n");
      out.write("                                    </form>\n");
      out.write("                                </div>\n");
      out.write("                            </div>\n");
      out.write("                            <div class=\"col-md-1\">\n");
      out.write("                                <form action=\"cart.jsp\" method=\"post\" class=\"d-inline\">\n");
      out.write("                                    <input type=\"hidden\" name=\"removeId\" value=\"");
      out.print(item.get("id"));
      out.write("\">\n");
      out.write("                                    <button type=\"submit\" class=\"btn btn-outline-danger btn-sm\" \n");
      out.write("                                            onclick=\"return confirm('Remove this item from cart?')\">\n");
      out.write("                                        <i class=\"fas fa-trash\"></i>\n");
      out.write("                                    </button>\n");
      out.write("                                </form>\n");
      out.write("                            </div>\n");
      out.write("                        </div>\n");
      out.write("                    </div>\n");
      out.write("                    ");
 } 
      out.write("\n");
      out.write("                </div>\n");
      out.write("                \n");
      out.write("                <div class=\"col-lg-4\">\n");
      out.write("                    <div class=\"total-section\">\n");
      out.write("                        <h4 class=\"mb-4\">Order Summary</h4>\n");
      out.write("                        <div class=\"d-flex justify-content-between mb-3\">\n");
      out.write("                            <span>Items (");
      out.print(cart.size());
      out.write("):</span>\n");
      out.write("                            <span>â‚¹");
      out.print(String.format("%.2f", total));
      out.write("</span>\n");
      out.write("                        </div>\n");
      out.write("                        <div class=\"d-flex justify-content-between mb-3\">\n");
      out.write("                            <span>Shipping:</span>\n");
      out.write("                            <span class=\"text-success\">Free</span>\n");
      out.write("                        </div>\n");
      out.write("                        <hr>\n");
      out.write("                        <div class=\"d-flex justify-content-between mb-4\">\n");
      out.write("                            <h5>Total:</h5>\n");
      out.write("                            <h5 class=\"text-primary\">â‚¹");
      out.print(String.format("%.2f", total));
      out.write("</h5>\n");
      out.write("                        </div>\n");
      out.write("                        <button class=\"btn btn-primary w-100 mb-3\">\n");
      out.write("                            <i class=\"fas fa-credit-card me-2\"></i>Proceed to Checkout\n");
      out.write("                        </button>\n");
      out.write("                        <a href=\"category.jsp\" class=\"btn btn-outline-secondary w-100\">\n");
      out.write("                            <i class=\"fas fa-arrow-left me-2\"></i>Continue Shopping\n");
      out.write("                        </a>\n");
      out.write("                    </div>\n");
      out.write("                </div>\n");
      out.write("            </div>\n");
      out.write("        ");
 } 
      out.write("\n");
      out.write("    </div>\n");
      out.write("    \n");
      out.write("    <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js\"></script>\n");
      out.write("    <script>\n");
      out.write("        function updateQuantity(productId, newQuantity) {\n");
      out.write("            if (newQuantity < 1) {\n");
      out.write("                if (confirm('Remove this item from cart?')) {\n");
      out.write("                    document.querySelector(`form input[name=\"removeId\"][value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${productId}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"]`).closest('form').submit();\n");
      out.write("                } else {\n");
      out.write("                    location.reload();\n");
      out.write("                }\n");
      out.write("            } else {\n");
      out.write("                const form = document.createElement('form');\n");
      out.write("                form.method = 'post';\n");
      out.write("                form.action = 'cart.jsp';\n");
      out.write("                \n");
      out.write("                const updateIdInput = document.createElement('input');\n");
      out.write("                updateIdInput.type = 'hidden';\n");
      out.write("                updateIdInput.name = 'updateId';\n");
      out.write("                updateIdInput.value = productId;\n");
      out.write("                \n");
      out.write("                const newQuantityInput = document.createElement('input');\n");
      out.write("                newQuantityInput.type = 'hidden';\n");
      out.write("                newQuantityInput.name = 'newQuantity';\n");
      out.write("                newQuantityInput.value = newQuantity;\n");
      out.write("                \n");
      out.write("                form.appendChild(updateIdInput);\n");
      out.write("                form.appendChild(newQuantityInput);\n");
      out.write("                document.body.appendChild(form);\n");
      out.write("                form.submit();\n");
      out.write("            }\n");
      out.write("        }\n");
      out.write("    </script>\n");
      out.write("</body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
