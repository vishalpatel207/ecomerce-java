/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.44
 * Generated at: 2025-09-12 11:26:43 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;

public final class signup_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("    <!DOCTYPE html>\n");
      out.write("    <html>\n");
      out.write("\n");
      out.write("    <head>\n");
      out.write("        <meta charset=\"UTF-8\">\n");
      out.write("        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n");
      out.write("        <title>Sign Up - ShopEasy</title>\n");
      out.write("        <link rel=\"stylesheet\" href=\"css/style.css?v=1.0\">\n");
      out.write("        <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css\">\n");
      out.write("        <style>\n");
      out.write("            * {\n");
      out.write("                margin: 0;\n");
      out.write("                padding: 0;\n");
      out.write("                box-sizing: border-box;\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            body.signup-page {\n");
      out.write("                font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n");
      out.write("                background: linear-gradient(135deg, #667eea 0%, #764ba2 100%) !important;\n");
      out.write("                min-height: 100vh !important;\n");
      out.write("                display: flex !important;\n");
      out.write("                align-items: center !important;\n");
      out.write("                justify-content: center !important;\n");
      out.write("                padding: 20px !important;\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            .form-container {\n");
      out.write("                background: white !important;\n");
      out.write("                padding: 2rem !important;\n");
      out.write("                border-radius: 15px !important;\n");
      out.write("                box-shadow: 0 15px 35px rgba(0, 0, 0, 0.1) !important;\n");
      out.write("                width: 100% !important;\n");
      out.write("                max-width: 400px !important;\n");
      out.write("                animation: fadeInUp 0.6s ease-out;\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            .header {\n");
      out.write("                text-align: center;\n");
      out.write("                margin-bottom: 2rem;\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            .header h1 {\n");
      out.write("                color: #4a5568;\n");
      out.write("                font-size: 2.5rem;\n");
      out.write("                margin-bottom: 0.5rem;\n");
      out.write("                font-weight: 300;\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            .header p {\n");
      out.write("                color: #718096;\n");
      out.write("                font-size: 1rem;\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            .form-group {\n");
      out.write("                margin-bottom: 1.5rem;\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            .form-group label {\n");
      out.write("                display: block;\n");
      out.write("                margin-bottom: 0.5rem;\n");
      out.write("                color: #4a5568;\n");
      out.write("                font-weight: 500;\n");
      out.write("                font-size: 0.9rem;\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            .form-group input {\n");
      out.write("                width: 100%;\n");
      out.write("                padding: 12px 16px;\n");
      out.write("                border: 2px solid #e2e8f0;\n");
      out.write("                border-radius: 8px;\n");
      out.write("                font-size: 1rem;\n");
      out.write("                transition: all 0.3s ease;\n");
      out.write("                background: #f7fafc;\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            .form-group input:focus {\n");
      out.write("                outline: none;\n");
      out.write("                border-color: #667eea;\n");
      out.write("                background: white;\n");
      out.write("                box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            .btn {\n");
      out.write("                display: inline-block;\n");
      out.write("                padding: 11px 21px;\n");
      out.write("                background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n");
      out.write("                color: white;\n");
      out.write("                text-decoration: none;\n");
      out.write("                border: none;\n");
      out.write("                border-radius: 25px;\n");
      out.write("                font-weight: 600;\n");
      out.write("                cursor: pointer;\n");
      out.write("                transition: all 0.3s ease;\n");
      out.write("                text-transform: uppercase;\n");
      out.write("                letter-spacing: 0.5px;\n");
      out.write("                font-size: 14px;\n");
      out.write("                width: 100%;\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            .btn:hover {\n");
      out.write("                transform: translateY(-2px);\n");
      out.write("                box-shadow: 0 10px 25px rgba(102, 126, 234, 0.3);\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            .link {\n");
      out.write("                text-align: center;\n");
      out.write("                margin-top: 1.5rem;\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            .link a {\n");
      out.write("                color: #667eea;\n");
      out.write("                text-decoration: none;\n");
      out.write("                font-weight: 500;\n");
      out.write("                transition: color 0.3s ease;\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            .link a:hover {\n");
      out.write("                color: #764ba2;\n");
      out.write("                text-decoration: underline;\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            .message {\n");
      out.write("                padding: 12px 16px;\n");
      out.write("                border-radius: 8px;\n");
      out.write("                margin-bottom: 1rem;\n");
      out.write("                font-weight: 500;\n");
      out.write("                display: flex;\n");
      out.write("                align-items: center;\n");
      out.write("                gap: 8px;\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            .message.error {\n");
      out.write("                background: #fed7d7;\n");
      out.write("                color: #742a2a;\n");
      out.write("                border: 1px solid #feb2b2;\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            .message.success {\n");
      out.write("                background: #f0fff4;\n");
      out.write("                color: #22543d;\n");
      out.write("                border: 1px solid #9ae6b4;\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            @keyframes fadeInUp {\n");
      out.write("                from {\n");
      out.write("                    opacity: 0;\n");
      out.write("                    transform: translateY(30px);\n");
      out.write("                }\n");
      out.write("\n");
      out.write("                to {\n");
      out.write("                    opacity: 1;\n");
      out.write("                    transform: translateY(0);\n");
      out.write("                }\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            @media (max-width: 480px) {\n");
      out.write("                .form-container {\n");
      out.write("                    padding: 1.5rem !important;\n");
      out.write("                }\n");
      out.write("\n");
      out.write("                .header h1 {\n");
      out.write("                    font-size: 2rem;\n");
      out.write("                }\n");
      out.write("            }\n");
      out.write("        </style>\n");
      out.write("    </head>\n");
      out.write("\n");
      out.write("    <body class=\"signup-page\">\n");
      out.write("        <div class=\"form-container\">\n");
      out.write("            <div class=\"header\">\n");
      out.write("                <h1><i class=\"fas fa-shopping-bag\"></i> ShopEasy</h1>\n");
      out.write("                <p>Create your account and start shopping!</p>\n");
      out.write("            </div>\n");
      out.write("\n");
      out.write("            ");
 String error=request.getParameter("error"); if (error !=null) { 
      out.write("\n");
      out.write("                <div class=\"message error\">\n");
      out.write("                    <i class=\"fas fa-exclamation-triangle\"></i>\n");
      out.write("                    ");
      out.print( error );
      out.write("\n");
      out.write("                </div>\n");
      out.write("                ");
 } 
      out.write("\n");
      out.write("\n");
      out.write("                    <form action=\"signup\" method=\"post\">\n");
      out.write("                        <div class=\"form-group\">\n");
      out.write("                            <label for=\"fullName\"><i class=\"fas fa-user\"></i> Full Name</label>\n");
      out.write("                            <input type=\"text\" id=\"fullName\" name=\"fullName\" required placeholder=\"Enter your full name\"\n");
      out.write("                                value=\"");
      out.print( request.getParameter(" fullName") !=null ? request.getParameter("fullName")
                                : "" );
      out.write("\">\n");
      out.write("                        </div>\n");
      out.write("\n");
      out.write("                        <div class=\"form-group\">\n");
      out.write("                            <label for=\"email\"><i class=\"fas fa-envelope\"></i> Email</label>\n");
      out.write("                            <input type=\"email\" id=\"email\" name=\"email\" required placeholder=\"Enter your email\"\n");
      out.write("                                value=\"");
      out.print( request.getParameter(" email") !=null ? request.getParameter("email") : ""
                                );
      out.write("\">\n");
      out.write("                        </div>\n");
      out.write("\n");
      out.write("                        <div class=\"form-group\">\n");
      out.write("                            <label for=\"username\"><i class=\"fas fa-at\"></i> Username</label>\n");
      out.write("                            <input type=\"text\" id=\"username\" name=\"username\" required placeholder=\"Choose a username\"\n");
      out.write("                                value=\"");
      out.print( request.getParameter(" username") !=null ? request.getParameter("username")
                                : "" );
      out.write("\">\n");
      out.write("                        </div>\n");
      out.write("\n");
      out.write("                        <div class=\"form-group\">\n");
      out.write("                            <label for=\"password\"><i class=\"fas fa-lock\"></i> Password</label>\n");
      out.write("                            <input type=\"password\" id=\"password\" name=\"password\" required\n");
      out.write("                                placeholder=\"Choose a password\">\n");
      out.write("                        </div>\n");
      out.write("\n");
      out.write("                        <div class=\"form-group\">\n");
      out.write("                            <label for=\"confirmPassword\"><i class=\"fas fa-lock\"></i> Confirm Password</label>\n");
      out.write("                            <input type=\"password\" id=\"confirmPassword\" name=\"confirmPassword\" required\n");
      out.write("                                placeholder=\"Confirm your password\">\n");
      out.write("                        </div>\n");
      out.write("\n");
      out.write("                        <button type=\"submit\" class=\"btn btn-primary\">\n");
      out.write("                            <i class=\"fas fa-user-plus\"></i> Sign Up\n");
      out.write("                        </button>\n");
      out.write("                    </form>\n");
      out.write("\n");
      out.write("                    <div class=\"link\">\n");
      out.write("                        <a href=\"login.jsp\"><i class=\"fas fa-sign-in-alt\"></i> Already have an account? Sign In</a>\n");
      out.write("                    </div>\n");
      out.write("                    <div class=\"link\">\n");
      out.write("                        <a href=\"index.jsp\"><i class=\"fas fa-home\"></i> Back to Home</a>\n");
      out.write("                    </div>\n");
      out.write("        </div>\n");
      out.write("\n");
      out.write("        <script>\n");
      out.write("            document.querySelector('form').addEventListener('submit', function (e) {\n");
      out.write("                const fullName = document.getElementById('fullName').value;\n");
      out.write("                const email = document.getElementById('email').value;\n");
      out.write("                const username = document.getElementById('username').value;\n");
      out.write("                const password = document.getElementById('password').value;\n");
      out.write("                const confirmPassword = document.getElementById('confirmPassword').value;\n");
      out.write("\n");
      out.write("                if (fullName.length < 3) {\n");
      out.write("                    e.preventDefault();\n");
      out.write("                    alert('Full Name must be at least 3 characters long');\n");
      out.write("                    return;\n");
      out.write("                }\n");
      out.write("\n");
      out.write("                const emailPattern = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,6}$/;\n");
      out.write("                if (!emailPattern.test(email)) {\n");
      out.write("                    e.preventDefault();\n");
      out.write("                    alert('Please enter a valid email address');\n");
      out.write("                    return;\n");
      out.write("                }\n");
      out.write("\n");
      out.write("                if (username.length < 3) {\n");
      out.write("                    e.preventDefault();\n");
      out.write("                    alert('Username must be at least 3 characters long');\n");
      out.write("                    return;\n");
      out.write("                }\n");
      out.write("\n");
      out.write("                if (password.length < 6) {\n");
      out.write("                    e.preventDefault();\n");
      out.write("                    alert('Password must be at least 6 characters long');\n");
      out.write("                    return;\n");
      out.write("                }\n");
      out.write("\n");
      out.write("                if (password !== confirmPassword) {\n");
      out.write("                    e.preventDefault();\n");
      out.write("                    alert('Passwords do not match');\n");
      out.write("                    return;\n");
      out.write("                }\n");
      out.write("\n");
      out.write("                const btn = document.querySelector('.btn');\n");
      out.write("                btn.textContent = 'Signing Up...';\n");
      out.write("                btn.disabled = true;\n");
      out.write("            });\n");
      out.write("        </script>\n");
      out.write("\n");
      out.write("\n");
      out.write("    </body>\n");
      out.write("\n");
      out.write("    </html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
